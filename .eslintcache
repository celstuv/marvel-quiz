[{"C:\\wamp64\\www\\marvel-quiz\\src\\components\\Quiz\\index.js":"1"},{"size":1969,"mtime":1608234010816,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"6"},"1htu20f","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Quiz\\index.js",["7"],"import React, { Component } from 'react';\r\nimport { QuizMarvel } from '../quizMarvel/';\r\nimport Levels from '../Levels';\r\nimport ProgressBar from '../ProgressBar';\r\n\r\nclass Quiz extends Component {\r\n\r\n  state = {\r\n    levelNames: [\"debutant\",\"confirme\", \"expert\"],\r\n    quizLevel: 0,\r\n    maxQuestions: 10,\r\n    storedQuestions: [],\r\n    question: null,\r\n    options: [],\r\n    idQuestion: 0\r\n  }\r\n\r\n  loadQuestions = quizz => {\r\n    /*console.log(quizz);*/\r\n    const fetchedArrayQuiz = QuizMarvel[0].quizz[quizz];\r\n    /*console.log(fetchedArrayQuiz);*/\r\n    if(fetchedArrayQuiz.length >= this.state.maxQuestions) {\r\n        const newArray = fetchedArrayQuiz.map( ({answer,... keepRest}) => keepRest);\r\n        this.setState({storedQuestions: newArray})\r\n    } else {\r\n        alert(\"Pas assez de questions\");\r\n    }\r\n  }\r\n\r\n  /*Méthode de cycle de vie\r\n  il s'exécute puis lance loadQuestions*/\r\n  componentDidMount() {\r\n    this.loadQuestions(this.state.levelNames[this.state.quizLevel])\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(this.state.storedQuestions !== prevState.storedQuestions){\r\n      this.setState({\r\n        question: this.state.storedQuestions[this.state.idQuestion].question,\r\n        options: this.state.storedQuestions[this.state.idQuestion].options\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /*qd le render s'éxécute, componentDidMount s'exécute */\r\n   render() {\r\n     const {pseudo} = this.props.userData;\r\n     const displayOptions = this.state.options.map((option, index) => {\r\n       return(\r\n         <p key={index} className=\"answerOptions\">{option}</p>\r\n       )\r\n     })\r\n\r\n     return (\r\n       <div>\r\n         <h2>Bonjour : {pseudo}, et bienvenue sur notre Quiz !</h2>\r\n         <Levels />\r\n         <ProgressBar />\r\n         <h3>{this.state.question}</h3>\r\n\r\n         {displayOptions}\r\n         \r\n         <button className=\"btnSubmit\" type=\"button\">Suivant</button>\r\n       </div>\r\n     )\r\n   }\r\n}\r\n\r\nexport default Quiz;\r\n",{"ruleId":"8","severity":1,"message":"9","line":23,"column":60,"nodeType":"10","messageId":"11","endLine":23,"endColumn":61,"fix":"12"},"rest-spread-spacing","Unexpected whitespace after rest property operator.","ExperimentalRestProperty","unexpectedWhitespace",{"range":"13","text":"14"},[677,678],""]
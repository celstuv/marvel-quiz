[{"C:\\wamp64\\www\\marvel-quiz\\src\\reportWebVitals.js":"1","C:\\wamp64\\www\\marvel-quiz\\src\\index.js":"2","C:\\wamp64\\www\\marvel-quiz\\src\\components\\App\\index.js":"3","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Header\\index.js":"4","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Landing\\index.js":"5","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Footer\\index.js":"6","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Login\\index.js":"7","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Welcome\\index.js":"8","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Signup\\index.js":"9","C:\\wamp64\\www\\marvel-quiz\\src\\components\\ErrorPage\\index.js":"10","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Firebase\\index.js":"11","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Firebase\\context.js":"12","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Firebase\\firebase.js":"13","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Logout\\index.js":"14","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Quiz\\index.js":"15"},{"size":362,"mtime":1608022434996,"results":"16","hashOfConfig":"17"},{"size":769,"mtime":1608130049964,"results":"18","hashOfConfig":"17"},{"size":872,"mtime":1608144467521,"results":"19","hashOfConfig":"17"},{"size":306,"mtime":1608139251979,"results":"20","hashOfConfig":"17"},{"size":2483,"mtime":1608130204052,"results":"21","hashOfConfig":"17"},{"size":349,"mtime":1608117196889,"results":"22","hashOfConfig":"17"},{"size":2977,"mtime":1608219189192,"results":"23","hashOfConfig":"17"},{"size":928,"mtime":1608219000136,"results":"24","hashOfConfig":"17"},{"size":3198,"mtime":1608207201169,"results":"25","hashOfConfig":"17"},{"size":530,"mtime":1608124899499,"results":"26","hashOfConfig":"17"},{"size":186,"mtime":1608129212728,"results":"27","hashOfConfig":"17"},{"size":141,"mtime":1608129384344,"results":"28","hashOfConfig":"17"},{"size":826,"mtime":1608136373427,"results":"29","hashOfConfig":"17"},{"size":771,"mtime":1608207314018,"results":"30","hashOfConfig":"17"},{"size":141,"mtime":1608205659005,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1htu20f",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\wamp64\\www\\marvel-quiz\\src\\reportWebVitals.js",[],["68","69"],"C:\\wamp64\\www\\marvel-quiz\\src\\index.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\App\\index.js",["70"],"import React from 'react';\r\n/*import ReactDOM from 'react-dom';*/\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Header from '../Header';\r\nimport Landing from '../Landing';\r\nimport Footer from '../Footer';\r\nimport Welcome from '../Welcome';\r\nimport Login from '../Login';\r\nimport Signup from '../Signup';\r\nimport ErrorPage from '../ErrorPage';\r\nimport '../../App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Landing} /> /* exact permet de prendre strictement le */\r\n        <Route path=\"/welcome\" component={Welcome} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Header\\index.js",["71"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"banner-container\">\r\n      <h1><Link to=\"/\">Marvel Quiz</Link></h1>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Header;\r\n","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Landing\\index.js",["72"],"import React, { useRef, useEffect, useState, Fragment } from 'react';\r\n//useRef et useEffect useState, Fragment sont des hooks\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Landing = () => {\r\n\r\n  //Création d'une variable d'état à false\r\n  const [btn, setBtn] = useState(false);\r\n\r\n  const refWolverine = useRef(null);\r\n  //console.log(refWolverine); pour voir si j'ai une classList\r\n\r\n  //Ajout de function useEffect pour changer l'image au chargement de la page\r\n  //useEffect s'exécute 1 fois dans return au moment de l'affichage de la page\r\n  useEffect(() => {\r\n    //ajout de css pour obtenir l'image w-men.png\r\n    refWolverine.current.classList.add(\"startingImg\");\r\n    //retirer l'image au bout de 1s ainsi que les boutons inscriptions et connexions\r\n    setTimeout(() => {\r\n      refWolverine.current.classList.remove(\"startingImg\");\r\n      setBtn(true);\r\n    }, 1000);\r\n  }, [])\r\n\r\n\r\n  //Afficher les griffes qd on survol les boutons inscriptions et connexions\r\n  const setLeftImg = () => {\r\n    refWolverine.current.classList.add(\"leftImg\");\r\n    //refWolverine.current.classList.remove(\"rightImg\");\r\n  }\r\n\r\n  const setRightImg = () => {\r\n    refWolverine.current.classList.add(\"rightImg\");\r\n    //refWolverine.current.classList.remove(\"leftImg\");\r\n  }\r\n\r\n  // Autre methodes pour Effacer les griffes si on est sur l'un a=ou l'autre des boutons\r\n  const clearImg = () => {\r\n    if(refWolverine.current.classList.contains(\"leftImg\")) {\r\n      refWolverine.current.classList.remove(\"leftImg\")\r\n    } else if (refWolverine.current.classList.contains(\"rightImg\"))\r\n    refWolverine.current.classList.remove(\"rightImg\");\r\n  }\r\n\r\n\r\n  //condition de fonction si Btn est true alors affiche les boutons\r\n  const displayBtn = btn && (\r\n    //Fragment = div sans les caractéristiques de la div\r\n    //Link permet faire des liens. <link></Link> = <a href></a>\r\n    <Fragment>\r\n      <div className=\"leftBox\">\r\n        <Link onMouseOver={setLeftImg} onMouseOut={clearImg} className=\"btn-welcome\" to =\"/signup\">Inscription</Link>\r\n      </div>\r\n      <div className=\"rightBox\">\r\n        <Link onMouseOver={setRightImg} onMouseOut={clearImg} className=\"btn-welcome\" to =\"/login\">Connexion</Link>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n\r\n  return (\r\n    //au moment de l'affichage de la page , on a wolverine sans griffe\r\n    <main ref={refWolverine} className=\"welcomePage\">\r\n      { displayBtn }\r\n    </main>\r\n  )\r\n}\r\nexport default Landing;\r\n","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Footer\\index.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\Login\\index.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\Welcome\\index.js",["73"],"import React, { useState, Fragment, useContext, useEffect } from 'react';\r\nimport { FirebaseContext } from '../Firebase';\r\nimport Logout from '../Logout';\r\nimport Quiz from '../Quiz';\r\n\r\nconst Welcome = (props) => {\r\n\r\n  const firebase = useContext(FirebaseContext);\r\n  const [userSession, setUserSession] = useState(null);\r\n\r\n  useEffect(() => {\r\n    //Listener pour vérifier l'user authentifier\r\n    let listener = firebase.auth.onAuthStateChanged(user => {\r\n      user ? setUserSession(user) : props.history.push('/')\r\n    })\r\n    return () => {\r\n      listener()\r\n    };\r\n  }, []);\r\n\r\n  return userSession === null ? (\r\n    <Fragment>\r\n      <div className=\"loader\"></div>\r\n      <p className=\"loaderText\">...Loading</p>\r\n    </Fragment>\r\n  ) : (\r\n      <div className=\"quiz-bg\">\r\n        <div className=\"container\">\r\n          <Logout />\r\n          <Quiz />\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\nexport default Welcome;\r\n","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Signup\\index.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\ErrorPage\\index.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\Firebase\\index.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\Firebase\\context.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\Firebase\\firebase.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\Logout\\index.js",["74"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { FirebaseContext } from '../Firebase';\r\n\r\nconst Logout = () => {\r\n\r\n  const firebase = useContext(FirebaseContext);\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  /*console.log(checked);*/\r\n\r\n  useEffect(() => {\r\n    if (checked) {\r\n      console.log(\"Déconnexion\");\r\n      firebase.signoutUser();\r\n    }\r\n  }, [checked], firebase);\r\n\r\n  const handleChange = (event) => {\r\n    setChecked(event.target.checked);\r\n  }\r\n\r\n  return (\r\n    <div className=\"logoutContainer\">\r\n      <label className=\"switch\">\r\n        <input onChange={handleChange} type=\"checkbox\" checked={checked} />\r\n        <span className=\"slider round\"></span>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\nexport default Logout;\r\n","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Quiz\\index.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":19,"column":53,"nodeType":"81","endLine":20,"endColumn":9},{"ruleId":"82","severity":1,"message":"83","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":19,"column":6,"nodeType":"88","endLine":19,"endColumn":8,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":16,"column":6,"nodeType":"88","endLine":16,"endColumn":15,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'firebase.auth' and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [firebase.auth, props.history]",{"range":"100","text":"101"},"Update the dependencies array to be: [checked, firebase]",{"range":"102","text":"103"},[581,583],"[firebase.auth, props.history]",[392,401],"[checked, firebase]"]
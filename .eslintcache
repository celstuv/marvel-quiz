[{"C:\\wamp64\\www\\marvel-quiz\\src\\reportWebVitals.js":"1","C:\\wamp64\\www\\marvel-quiz\\src\\index.js":"2","C:\\wamp64\\www\\marvel-quiz\\src\\components\\App\\index.js":"3","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Header\\index.js":"4","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Landing\\index.js":"5","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Footer\\index.js":"6","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Login\\index.js":"7","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Welcome\\index.js":"8","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Signup\\index.js":"9","C:\\wamp64\\www\\marvel-quiz\\src\\components\\ErrorPage\\index.js":"10"},{"size":362,"mtime":1608022434996,"results":"11","hashOfConfig":"12"},{"size":489,"mtime":1608108919911,"results":"13","hashOfConfig":"12"},{"size":867,"mtime":1608123836382,"results":"14","hashOfConfig":"12"},{"size":227,"mtime":1608109932112,"results":"15","hashOfConfig":"12"},{"size":2483,"mtime":1608124186469,"results":"16","hashOfConfig":"12"},{"size":349,"mtime":1608117196889,"results":"17","hashOfConfig":"12"},{"size":233,"mtime":1608117920773,"results":"18","hashOfConfig":"12"},{"size":230,"mtime":1608117927168,"results":"19","hashOfConfig":"12"},{"size":236,"mtime":1608117911228,"results":"20","hashOfConfig":"12"},{"size":237,"mtime":1608118515658,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1htu20f",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\wamp64\\www\\marvel-quiz\\src\\reportWebVitals.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\index.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\App\\index.js",["47","48"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Header from '../Header';\r\nimport Landing from '../Landing';\r\nimport Footer from '../Footer';\r\nimport Welcome from '../Welcome';\r\nimport Login from '../Login';\r\nimport Signup from '../Signup';\r\nimport ErrorPage from '../ErrorPage';\r\nimport '../../App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Landing} /> // exact permet de prendre strictement le /\r\n        <Route path=\"/welcome\" component={Welcome} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route component={ErrorPage} />\r\n      </Switch>\r\n\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Header\\index.js",["49"],"import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <div className=\"banner-container\">\r\n      <h1><a href=\"/\"></a>Marvel Quiz</h1>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\nexport default Header;\r\n",["50","51"],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\Landing\\index.js",["52"],"import React, { useRef, useEffect, useState, Fragment } from 'react';\r\n//useRef et useEffect useState, Fragment sont des hooks\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Landing = () => {\r\n\r\n  //Création d'une variable d'état à false\r\n  const [btn, setBtn] = useState(false);\r\n\r\n  const refWolverine = useRef(null);\r\n  //console.log(refWolverine); pour voir si j'ai une classList\r\n\r\n  //Ajout de function useEffect pour changer l'image au chargement de la page\r\n  //useEffect s'exécute 1 fois dans return au moment de l'affichage de la page\r\n  useEffect(() => {\r\n    //ajout de css pour obtenir l'image w-men.png\r\n    refWolverine.current.classList.add(\"startingImg\");\r\n    //retirer l'image au bout de 1s ainsi que les boutons inscriptions et connexions\r\n    setTimeout(() => {\r\n      refWolverine.current.classList.remove(\"startingImg\");\r\n      setBtn(true);\r\n    }, 1000);\r\n  }, [])\r\n\r\n\r\n  //Afficher les griffes qd on survol les boutons inscriptions et connexions\r\n  const setLeftImg = () => {\r\n    refWolverine.current.classList.add(\"leftImg\");\r\n    //refWolverine.current.classList.remove(\"rightImg\");\r\n  }\r\n\r\n  const setRightImg = () => {\r\n    refWolverine.current.classList.add(\"rightImg\");\r\n    //refWolverine.current.classList.remove(\"leftImg\");\r\n  }\r\n\r\n  // Autre methodes pour Effacer les griffes si on est sur l'un a=ou l'autre des boutons\r\n  const clearImg = () => {\r\n    if(refWolverine.current.classList.contains(\"leftImg\")) {\r\n      refWolverine.current.classList.remove(\"leftImg\")\r\n    } else if (refWolverine.current.classList.contains(\"rightImg\"))\r\n    refWolverine.current.classList.remove(\"rightImg\");\r\n  }\r\n\r\n\r\n  //condition de fonction si Btn est true alors affiche les boutons\r\n  const displayBtn = btn && (\r\n    //Fragment = div sans les caractéristiques de la div\r\n    //Link permet faire des liens. <link></Link> = <a href></a>\r\n    <Fragment>\r\n      <div className=\"leftBox\">\r\n        <Link onMouseOver={setLeftImg} onMouseOut={clearImg} className=\"btn-welcome\" to =\"/signup\">Inscription</Link>\r\n      </div>\r\n      <div className=\"rightBox\">\r\n        <Link onMouseOver={setRightImg} onMouseOut={clearImg} className=\"btn-welcome\" to =\"/login\">Connexion</Link>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n\r\n  return (\r\n    //au moment de l'affichage de la page , on a wolverine sans griffe\r\n    <main ref={refWolverine} className=\"welcomePage\">\r\n      { displayBtn }\r\n    </main>\r\n  )\r\n}\r\nexport default Landing;\r\n","C:\\wamp64\\www\\marvel-quiz\\src\\components\\Footer\\index.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\Login\\index.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\Welcome\\index.js",[],"C:\\wamp64\\www\\marvel-quiz\\src\\components\\Signup\\index.js",["53"],"import React from 'react';\r\n\r\nconst Signup = () => {\r\n  return (\r\n      <div className=\"signUpLoginBox\">\r\n        <div className=\"slContainer\">\r\n            <p>Signup !</p>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\nexport default Signup;\r\n","C:\\wamp64\\www\\marvel-quiz\\src\\components\\ErrorPage\\index.js",[],{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":16},{"ruleId":"58","severity":1,"message":"59","line":19,"column":53,"nodeType":"60","endLine":20,"endColumn":9},{"ruleId":"61","severity":1,"message":"62","line":7,"column":11,"nodeType":"63","endLine":7,"endColumn":23},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"54","severity":1,"message":"55","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"68","line":10,"column":5},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-native-reassign",["69"],"no-negated-in-lhs",["70"],"Parsing error: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\n\n   8 |         </div>\n   9 |       </div>\n> 10 |     </footer>\n     |     ^\n  11 |   )\n  12 | }\n  13 | export default Signup;","no-global-assign","no-unsafe-negation"]